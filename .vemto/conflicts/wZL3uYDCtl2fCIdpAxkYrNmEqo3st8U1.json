{
    "conflicts": [
        {
            "id": "92a66120-6548-4d6e-b18c-e4641c46abad",
            "currentContent": "<?php\n\nnamespace App\\Livewire\\Dashboard;\n\nuse Livewire\\Component;\nuse App\\Models\\Merchant;\nuse Livewire\\WithPagination;\n\nclass MerchantIndex extends Component\n{\n    use WithPagination;\n\n    public $search;\n    public $sortField = 'updated_at';\n    public $sortDirection = 'desc';\n\n    public $queryString = ['search', 'sortField', 'sortDirection'];\n\n    public $confirmingDeletion = false;\n    public $deletingMerchant;\n\n    public function updatingSearch()\n    {\n        $this->resetPage();\n    }\n\n    public function confirmDeletion(string $id)\n    {\n        $this->deletingMerchant = $id;\n\n        $this->confirmingDeletion = true;\n    }\n\n    public function delete(Merchant $merchant)\n    {\n        $merchant->delete();\n\n        $this->confirmingDeletion = false;\n    }\n\n    public function sortBy($field)\n    {\n        if ($this->sortField === $field) {\n            $this->sortDirection =\n                $this->sortDirection === 'asc' ? 'desc' : 'asc';\n        } else {\n            $this->sortDirection = 'asc';\n        }\n\n        $this->sortField = $field;\n    }\n\n    public function getRowsProperty()\n    {\n        return $this->rowsQuery->paginate(5);\n    }\n\n    public function getRowsQueryProperty()\n    {\n        $records =  Merchant::query()\n            ->orderBy($this->sortField, $this->sortDirection);\n        if($this->search)\n            $records->where('name', 'like', \"%{$this->search}%\");\n        return $records;\n    }\n\n    public function render()\n    {\n\n        return view('livewire.dashboard.merchants.index', [\n            'merchants' => $this->rows,\n        ]);\n    }\n}\n",
            "newContent": "<?php\n\nnamespace App\\Livewire\\Dashboard;\n\nuse Livewire\\Component;\nuse App\\Models\\Merchant;\nuse Livewire\\WithPagination;\n\nclass MerchantIndex extends Component\n{\n    use WithPagination;\n\n    public $search;\n    public $sortField = 'updated_at';\n    public $sortDirection = 'desc';\n\n    public $queryString = ['search', 'sortField', 'sortDirection'];\n\n    public $confirmingDeletion = false;\n    public $deletingMerchant;\n\n    public function updatingSearch()\n    {\n        $this->resetPage();\n    }\n\n    public function confirmDeletion(string $id)\n    {\n        $this->deletingMerchant = $id;\n\n        $this->confirmingDeletion = true;\n    }\n\n    public function delete(Merchant $merchant)\n    {\n        $merchant->delete();\n\n        $this->confirmingDeletion = false;\n    }\n\n    public function sortBy($field)\n    {\n        if ($this->sortField === $field) {\n            $this->sortDirection =\n                $this->sortDirection === 'asc' ? 'desc' : 'asc';\n        } else {\n            $this->sortDirection = 'asc';\n        }\n\n        $this->sortField = $field;\n    }\n\n    public function getRowsProperty()\n    {\n        return $this->rowsQuery->paginate(5);\n    }\n\n    public function getRowsQueryProperty()\n    {\n        return Merchant::query()\n            ->orderBy($this->sortField, $this->sortDirection)\n            ->where('name', 'like', \"%{$this->search}%\");\n    }\n\n    public function render()\n    {\n        return view('livewire.dashboard.merchants.index', [\n            'merchants' => $this->rows,\n        ]);\n    }\n}\n"
        }
    ]
}